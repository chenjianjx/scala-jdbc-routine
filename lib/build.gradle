import org.scoverage.CoverageType

plugins {
    id 'scala'
    id 'java-library'
    alias(libs.plugins.scoverage)

}

repositories {
    mavenCentral()
}

dependencies {
    implementation libs.scala.library

    testImplementation libs.scala.reflect
    testImplementation libs.junit.api
    testRuntimeOnly libs.junit.engine
    testImplementation libs.mockito.core
    testRuntimeOnly libs.h2 //TODO: remove it
    testImplementation libs.commons.dbutils
    testImplementation libs.testcontainers.mysql
    testRuntimeOnly libs.mysql.connector.java
    testImplementation libs.testcontainers.postgresql
    testRuntimeOnly libs.postgresql
    testImplementation libs.slf4j.api
    testRuntimeOnly libs.logback.classic
}


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [
            "-Xfatal-warnings",
            "-Ywarn-value-discard"
            //TODO: get a list of such options
    ]
}


test {
    useJUnitPlatform()
}

scoverage {
    check {
        minimumRate = 1.0
        coverageType = CoverageType.Statement
    }
}

check.dependsOn checkScoverage